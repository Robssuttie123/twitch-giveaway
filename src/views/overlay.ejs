<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Giveaway Overlay</title>
  <style>
    body {
      margin: 0;
      background: white;
      font-family: 'Montserrat', sans-serif;
      color: white;
      font-size: 2.5em;
      width: 1920px;
      height: 1080px;
      overflow: hidden;
      text-align: center;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: flex-start;
      padding-top: 2em;
      box-sizing: border-box;
    }

    .entry-count {
      font-weight: bold;
      margin-bottom: 0.3em;
      text-shadow: 0 0 6px rgba(0,0,0,0.6);
    }

    .divider-dot {
      margin: 0 0.5em;
      font-weight: normal;
      opacity: 0.8;
    }

    .divider {
      width: 60%;
      height: 4px;
      background: linear-gradient(90deg, #a64ff0, #d77aff, #a64ff0);
      border-radius: 2px;
      margin-bottom: 1em;
      box-shadow: 0 0 10px #a64ff0, 0 0 20px #a64ff0;
      animation: pulse 2s infinite ease-in-out;
    }

    @keyframes pulse {
      0%, 100% {
        box-shadow: 0 0 10px #a64ff0, 0 0 20px #a64ff0;
      }
      50% {
        box-shadow: 0 0 15px #d77aff, 0 0 30px #d77aff;
      }
    }

    .user-list {
      align-items: flex-start;
      align-content: flex-start;
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      gap: 0.6em 1em;
      max-width: 90%;
      font-size: 0.9em;
      transition: opacity 0.4s ease;
      min-height: 8em;
    }

    .user {
      display: inline-block;
      background: rgba(255, 255, 255, 0.15);
      color: white;
      padding: 0.3em 0.8em;
      border-radius: 4px;
      font-size: 1em;
      font-weight: 600;
      line-height: 1;
      white-space: nowrap;
      text-shadow: 0 0 5px rgba(0,0,0,0.6);
      animation: popIn 0.4s ease-out forwards;
      opacity: 0;
      transform: scale(0.8);
      vertical-align: middle;
    }

    @keyframes popIn {
      to {
        opacity: 1;
        transform: scale(1);
      }
    }

    #winnerBanner {
      display: none;
      position: absolute;
      top: 40%;
      left: 50%;
      transform: translate(-50%, -50%);
      color: gold;
      font-size: 1.8em;
      font-weight: bold;
      z-index: 10;
      background: none;
      border: none;
    }

    .page-indicator {
      font-size: 0.6em;
      color: white;
      text-shadow: 0 0 6px rgba(0,0,0,0.5);
      margin-top: 0.4em;
    }

    .overlay-branding {
      font-size: 0.8em;
      color: white;
      margin-bottom: 0.5em;
      text-shadow: 0 0 4px rgba(0, 0, 0, 0.4);
    }

    .overlay-branding a {
      color: #ffd700;
      text-decoration: none;
      font-weight: bold;
    }

    .overlay-branding a:hover {
      text-decoration: underline;
    }
  </style>
</head>
<body>
  <div class="overlay-branding">Running on <a href="https://thesimplegiveaway.com" target="_blank">TheSimpleGiveaway.com</a></div>
  <div class="entry-count" id="entryCount">
    <span id="commandText"></span><span class="divider-dot">â€”</span>Entries: 0
  </div>
  <div class="divider"></div>
  <div class="user-list" id="userList"></div>
  <div id="pageIndicator" class="page-indicator"></div>
  <div id="winnerBanner"></div>

  <script src="https://cdn.jsdelivr.net/npm/canvas-confetti@1.6.0/dist/confetti.browser.min.js"></script>
  <script src="/socket.io/socket.io.js"></script>
  <script>
  const socket = io(window.location.origin);
  const encryptedId = '<%= twitchId %>';
  socket.emit('joinRoom', encryptedId);

socket.on('connect', () => {
  refetchOverlayData();
});

  const userList = document.getElementById('userList');
  const entryCount = document.getElementById('entryCount');
  const commandText = document.getElementById('commandText');
  const pageIndicator = document.getElementById('pageIndicator');
  const winnerBanner = document.getElementById('winnerBanner');

  const seen = new Set();
  const entries = [];
  const entriesPerPage = 40;
  let currentPage = 0;
  let pageInterval;

  function renderPage(pageIndex) {
    userList.innerHTML = '';
    const start = pageIndex * entriesPerPage;
    const end = start + entriesPerPage;
    const pageEntries = entries.slice(start, end);

    pageEntries.forEach(name => {
      const span = document.createElement('span');
      span.className = 'user';
      span.textContent = name;
      userList.appendChild(span);
    });

    entryCount.innerHTML = `
      <span id="commandText">${commandText.textContent}</span>
      <span class="divider-dot">â€”</span>
      Entries: ${entries.length}
    `;

    if (entries.length > entriesPerPage) {
      const totalPages = Math.ceil(entries.length / entriesPerPage);
      pageIndicator.textContent = `Page ${pageIndex + 1} of ${totalPages}`;
      pageIndicator.style.display = 'block';
    } else {
      pageIndicator.style.display = 'none';
    }
  }

  function startAutoPaging() {
    if (pageInterval) clearInterval(pageInterval);
    if (entries.length <= entriesPerPage) {
      renderPage(0);
      return;
    }

    renderPage(0);
    currentPage = 1;

    pageInterval = setInterval(() => {
      renderPage(currentPage);
      currentPage = (currentPage + 1) % Math.ceil(entries.length / entriesPerPage);
    }, 10000);
  }

  function refetchOverlayData() {
    fetch(`/api/overlay/${encryptedId}/entries`)
      .then(res => res.json())
      .then(data => {
        seen.clear();
        entries.length = 0;
        userList.innerHTML = '';

        if (data.command) {
          commandText.textContent = data.command;
        }

        data.entries.forEach(name => {
          if (!seen.has(name)) {
            seen.add(name);
            entries.push(name);
          }
        });

        winnerBanner.style.display = 'none';
        winnerBanner.textContent = '';
        startAutoPaging();
      });
  }

  // Initial load
  refetchOverlayData();

  socket.on('entryUpdate', (data) => {
    const name = data.entry;
    if (seen.has(name)) return;
    seen.add(name);
    entries.push(name);

    const totalPages = Math.ceil(entries.length / entriesPerPage);
    if (currentPage >= totalPages) {
      currentPage = 0;
    }
    renderPage(currentPage);
  });

  socket.on('giveawayReset', () => {
    refetchOverlayData();
  });

  socket.on('winnersAnnounced', (data) => {
    if (pageInterval) clearInterval(pageInterval);
    userList.innerHTML = '';
    entryCount.textContent = '';
    pageIndicator.style.display = 'none';

    winnerBanner.textContent = data.winners.length === 1
      ? `ðŸŽ‰ Winner: ${data.winners[0]} ðŸŽ‰`
      : `ðŸŽ‰ Winners: ${data.winners.join(', ')} ðŸŽ‰`;

    winnerBanner.style.display = 'block';

    confetti({
      particleCount: 180,
      spread: 100,
      origin: { y: 0.6 }
    });
  });

  socket.on('kickUser', (data) => {
    const users = document.querySelectorAll('.user');
    users.forEach(el => {
      if (el.textContent.toLowerCase() === data.username.toLowerCase()) {
        el.remove();
      }
    });
    seen.delete(data.username.toLowerCase());
    const index = entries.findIndex(e => e.toLowerCase() === data.username.toLowerCase());
    if (index !== -1) entries.splice(index, 1);

    renderPage(currentPage);
  });

  socket.on('commandUpdated', (data) => {
    if (data.command) {
      commandText.textContent = data.command;
      entryCount.innerHTML = `
        <span id="commandText">${data.command}</span>
        <span class="divider-dot">â€”</span>
        Entries: ${entries.length}
      `;
    }
  });
  </script>
</body>
</html>
